{"version":3,"file":"react-clap-button.m.js","sources":["../src/components/ClearClaps.js","../src/components/ClapWrap.js","../src/components/ClapIcon.js","../src/components/ClapButton.js","../src/utils.js","../src/components/ClapCount.js","../src/index.js"],"sourcesContent":["import React from 'react'\nimport {Transition} from 'react-transition-group'\nimport styled, {css} from 'styled-components'\nimport {rgba, darken} from 'polished'\n\nconst ClearClaps = styled.button`\n  border: 0;\n  padding: 0;\n  appearance: none;\n  position: absolute;\n  right: 0;\n  top: calc(50% - 15px);\n  transform: translateX(0);\n  height: 30px;\n  width: 36px;\n  border-radius: 0 9999px 9999px 0;\n  backface-visibility: hidden;\n  cursor: pointer;\n  outline: none;\n  transition: transform .3s cubic-bezier(.25,0,.6,1.4) 1s,-webkit-transform .3s cubic-bezier(.25,0,.6,1.4) 1s;\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    right: calc(50% - 3.5px);\n    top: calc(50% - 8px);\n    height: 16px;\n    width: 2px;\n    border-radius: 9999px;\n    transition: background 0.3s ease-in-out;\n  }\n\n  &::before {\n    transform: rotate(45deg);\n  }\n\n  &::after {\n    transform: rotate(-45deg);\n  }\n\n  ${({theme: {primaryColor, secondaryColor}}) => css`\n    background: ${rgba(secondaryColor, 0.1)};\n\n    &::before,\n    &::after {\n      background: ${secondaryColor};\n    }\n\n    &:hover {\n      &::before,\n      &::after {\n        background: ${darken(0.1, secondaryColor)};\n      }\n    }\n  `}\n`\n\nconst transitionStyles = {\n  entered: () => ({\n    transform: 'translateX(calc(100% - 5px))',\n    transitionDelay: '0s'\n  }),\n  exiting: ({isClicked}) => ({\n    transitionDuration: isClicked ? '0.25s' : '0.3s',\n    transitionDelay: isClicked ? '0s' : '0.7s'\n  })\n}\n\nexport default ({in: inProp, ...props}) => {\n  return (\n    <Transition in={inProp} timeout={{enter: 400}}>\n      {state => <ClearClaps style={transitionStyles[state] && transitionStyles[state](props)} {...props} />}\n    </Transition>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport ClearClaps from './ClearClaps'\n\nconst Wrap = styled.div`\n  display: inline-block;\n  position: relative;\n  z-index: 1;\n`\n\nconst ClapWrapChildren = styled.div`\n  position: relative;\n  z-index: 2;\n`\n\nexport default class ClapWrap extends React.Component {\n  state = {\n    displayClear: false\n  }\n\n  onClick = () => {\n    if (this.state.displayClear) {\n      this.setState({displayClear: false})\n    }\n  }\n\n  mouseMove = () => {\n    if (!this.state.displayClear) {\n      this.setState({displayClear: true})\n    }\n  }\n\n  mouseLeave = () => {\n    if (this.state.displayClear) {\n      this.setState({displayClear: false})\n    }\n  }\n\n  render() {\n    const {children, isClicked, onClickClear} = this.props\n    const {displayClear} = this.state\n    return (\n      <Wrap\n        onMouseLeave={this.mouseLeave}\n        onClick={e => {\n          this.state.isClicked = true\n          setTimeout(() => {\n            this.state.isClicked = false\n          }, 100)\n        }}>\n        <ClapWrapChildren onMouseMove={this.mouseMove} onClick={this.onClick}>\n          {children}\n        </ClapWrapChildren>\n        <ClearClaps\n          onClick={onClickClear}\n          in={displayClear && isClicked}\n          isClicked={this.state.isClicked}\n        />\n      </Wrap>\n    )\n  }\n}\n","import React from 'react'\nimport styled, {css} from 'styled-components'\n\nconst Icon = styled.svg`\n  width: 33px;\n\n  ${({isClicked, theme: {secondaryColor}}) => css`\n    fill: ${!isClicked ? 'none' : secondaryColor};\n    stroke: ${!isClicked ? secondaryColor : 'white'};\n    stroke-width: ${!isClicked ? '2px' : '1px'};\n  `};\n`\n\nexport default props => (\n  <Icon\n    xmlns='http://www.w3.org/2000/svg'\n    viewBox='-549 338 100.1 125'\n    {...props}\n  >\n    <path\n      d='M-471.2 366.8c1.2 1.1 1.9 2.6 2.3 4.1.4-.3.8-.5 1.2-.7 1-1.9.7-4.3-1-5.9-2-1.9-5.2-1.9-7.2.1l-.2.2c1.8.1 3.6.9 4.9 2.2zm-28.8 14c.4.9.7 1.9.8 3.1l16.5-16.9c.6-.6 1.4-1.1 2.1-1.5 1-1.9.7-4.4-.9-6-2-1.9-5.2-1.9-7.2.1l-15.5 15.9c2.3 2.2 3.1 3 4.2 5.3zm-38.9 39.7c-.1-8.9 3.2-17.2 9.4-23.6l18.6-19c.7-2 .5-4.1-.1-5.3-.8-1.8-1.3-2.3-3.6-4.5l-20.9 21.4c-10.6 10.8-11.2 27.6-2.3 39.3-.6-2.6-1-5.4-1.1-8.3z'\n    />\n    <path\n      d='M-527.2 399.1l20.9-21.4c2.2 2.2 2.7 2.6 3.5 4.5.8 1.8 1 5.4-1.6 8l-11.8 12.2c-.5.5-.4 1.2 0 1.7.5.5 1.2.5 1.7 0l34-35c1.9-2 5.2-2.1 7.2-.1 2 1.9 2 5.2.1 7.2l-24.7 25.3c-.5.5-.4 1.2 0 1.7.5.5 1.2.5 1.7 0l28.5-29.3c2-2 5.2-2 7.1-.1 2 1.9 2 5.1.1 7.1l-28.5 29.3c-.5.5-.4 1.2 0 1.7.5.5 1.2.4 1.7 0l24.7-25.3c1.9-2 5.1-2.1 7.1-.1 2 1.9 2 5.2.1 7.2l-24.7 25.3c-.5.5-.4 1.2 0 1.7.5.5 1.2.5 1.7 0l14.6-15c2-2 5.2-2 7.2-.1 2 2 2.1 5.2.1 7.2l-27.6 28.4c-11.6 11.9-30.6 12.2-42.5.6-12-11.7-12.2-30.8-.6-42.7m18.1-48.4l-.7 4.9-2.2-4.4m7.6.9l-3.7 3.4 1.2-4.8m5.5 4.7l-4.8 1.6 3.1-3.9'\n    />\n  </Icon>\n)\n","import styled, {css, keyframes} from 'styled-components'\n\nconst shockwave = ({theme: {secondaryColor}}) => keyframes`\n0%{\n     box-shadow:0 0\n }\n 70%{\n     box-shadow:0 0 5px 10px rgba(255,255,255,0)\n }\n 100%{\n     box-shadow:0 0 0 0 rgba(255,255,255,0)\n }\n`\n\nconst ClapButton = styled.button`\n  position: relative;\n  outline: 1px solid transparent;\n  border-radius: 50%;\n  background: #fff;\n  transition: border 0.1s ease-in;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    display: block;\n    border-radius: 50%;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  ${props => props.isHover && css`\n    &::after {\n      animation: ${shockwave} 2s infinite;\n    }\n  `}\n\n  ${({theme: {primaryColor, secondaryColor, size}}) => css`\n    width: ${size}px;\n    height: ${size}px;\n    border: 1px solid ${primaryColor};\n\n    &::after {\n      width: ${size - 1}px;\n      height: ${size - 1}px;\n      border-color: ${secondaryColor};\n      color: ${secondaryColor};\n      fill: ${secondaryColor};\n    }\n\n    &:hover, &:focus {\n      border: 1px solid ${secondaryColor};\n    }\n  `}\n`\n\nexport default ClapButton\n","import {css} from 'styled-components'\n\nexport const textStyles = css`\n  font-size: 0.8rem;\n  user-select: none;\n  pointer-events: none;\n  position: absolute;\n`\n","import styled, {css} from 'styled-components'\nimport {textStyles} from '../utils'\n\nconst ClapCount = styled.span`\n  color: white;\n  border-radius: 50%;\n  backface-visibility: hidden;\n  ${textStyles}\n\n  ${({theme: {secondaryColor, size}}) => {\n    const threeQuarters = `${size * 3 / 4}px`\n    return css`\n\n      height: ${threeQuarters};\n      width: ${threeQuarters};\n      line-height: ${threeQuarters};\n      top: -${threeQuarters};\n      left: ${size / 8}px;\n      background: ${secondaryColor};\n    `\n  }}\n`\n\nexport default ClapCount\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components'\n\nimport ClapWrap from './components/ClapWrap'\nimport ClapIcon from './components/ClapIcon'\nimport ClapButton from './components/ClapButton'\nimport ClapCount from './components/ClapCount'\n\nconst defaultTheme = {\n  primaryColor: 'rgb(189, 195, 199)',\n  secondaryColor: 'rgb(39, 174, 96)',\n  size: 40\n}\n\nconst Clap = class extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      unclicked: true,\n      count: this.props.count,\n      countTotal: this.props.countTotal,\n      isClicked: props.count > 0,\n      isHover: false\n    }\n    this.onClick = this.onClick.bind(this)\n    this.onClickClear = this.onClickClear.bind(this)\n    this.clapButtonRef = React.createRef()\n    this.clapIconRef = React.createRef()\n    this.clapCountRef = React.createRef()\n  }\n\n  componentDidMount () {\n    // require mo-js on mount so it does not break SSR\n    const mojs = require('mo-js')\n\n    const tlDuration = 300\n\n    const countAnimation = new mojs.Html({\n      el: this.clapCountRef.current,\n      isShowStart: false,\n      isShowEnd: true,\n      y: { 0: -30 },\n      opacity: { 0: 1 },\n      duration: tlDuration\n    }).then({\n      opacity: { 1: 0 },\n      y: -80,\n      delay: tlDuration / 2\n    })\n\n    const opacityStart = this.props.count > 0 && this.state.unclicked ? 1 : 0\n\n    const scaleButton = new mojs.Html({\n      el: this.clapButtonRef.current,\n      duration: tlDuration,\n      scale: { 1.3: 1 },\n      easing: mojs.easing.out\n    })\n\n    const clap = this.clapButtonRef.current\n    clap.style.transform = 'scale(1, 1)'\n    this.animationTimeline = new mojs.Timeline()\n    this.animationTimeline.add([\n      countAnimation,\n      scaleButton\n    ])\n  }\n\n  getTheme () {\n    const { theme = {} } = this.props\n    return Object.assign({}, defaultTheme, theme)\n  }\n\n  onClick () {\n    const { maxCount, onCountChange } = this.props\n    this.animationTimeline.replay()\n\n    this.setState(({ count, countTotal }) => {\n      if (count < maxCount) {\n        onCountChange({\n          count: count + 1,\n          countTotal: count > 0 ? countTotal : (countTotal + 1)\n        })\n        return {\n          unclicked: false,\n          count: count + 1,\n          countTotal: count > 0 ? countTotal : (countTotal + 1),\n          isClicked: true\n        }\n      }\n    })\n  }\n\n  onClickClear () {\n    const { onCountChange } = this.props\n    this.setState(({ count, countTotal }) => {\n      onCountChange({ count: 0, countTotal: countTotal - count })\n      return {\n        isClicked: false,\n        countTotal: countTotal - count,\n        count: 0\n      }\n    })\n  }\n\n  render () {\n    const { count, countTotal, isClicked, isHover } = this.state\n    const { iconComponent: ClapIcon } = this.props\n\n    return (\n      <ThemeProvider theme={this.getTheme()}>\n        <ClapWrap isClicked={isClicked} onClickClear={this.onClickClear}>\n          <ClapButton\n            ref={this.clapButtonRef}\n            className='clap'\n            onClick={this.onClick}\n            onMouseEnter={e => this.setState({ isHover: true })}\n            onMouseLeave={e => this.setState({ isHover: false })}\n            isHover={isHover && count === 0}\n          >\n            <ClapIcon ref={this.clapIconRef} className='clap--icon' isClicked={isClicked} />\n            <ClapCount ref={this.clapCountRef} className='clap--count'>\n              {count}\n            </ClapCount>\n          </ClapButton>\n        </ClapWrap>\n      </ThemeProvider>\n    )\n  }\n}\n\nClap.defaultProps = {\n  countTotal: 0,\n  count: 0,\n  maxCount: 999,\n  isClicked: false,\n  onCountChange: () => {},\n  iconComponent: ClapIcon\n}\n\nexport default Clap\n"],"names":["ClearClaps","styled","button","theme","secondaryColor","primaryColor","css","rgba","darken","transitionStyles","entered","transform","transitionDelay","exiting","isClicked","transitionDuration","inProp","in","props","React","Transition","timeout","enter","state","style","Wrap","div","ClapWrapChildren","ClapWrap","displayClear","_this","setState","Component","this","children","onClickClear","onMouseLeave","mouseLeave","onClick","e","_this2","setTimeout","onMouseMove","mouseMove","Icon","svg","d","shockwave","keyframes","ClapButton","isHover","size","textStyles","ClapCount","span","threeQuarters","defaultTheme","Clap","unclicked","count","countTotal","bind","clapButtonRef","createRef","clapIconRef","clapCountRef","mojs","require","countAnimation","Html","el","current","isShowStart","isShowEnd","y","opacity","duration","then","delay","tlDuration","scaleButton","scale","easing","out","animationTimeline","Timeline","add","Object","assign","maxCount","onCountChange","replay","ClapIcon","iconComponent","ThemeProvider","getTheme","ref","className","onMouseEnter","defaultProps","xmlns","viewBox"],"mappings":"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"}